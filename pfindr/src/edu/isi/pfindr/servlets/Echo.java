package edu.isi.pfindr.servlets;

import java.net.UnknownHostException;
import java.sql.Connection;
import java.sql.SQLException;

import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.servlet.ServletConfig;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;

import org.apache.log4j.Logger;
import org.apache.log4j.MDC;

import edu.isi.pfindr.helper.Utils;
import edu.isi.pfindr.learn.test.Monitor;


/**
 * Servlet implementation class Echo
 */
@WebServlet(description = "Servlet for checking the application status")
public class Echo extends HttpServlet {
	static private Logger logger = Logger.getLogger(Echo.class);       
	private static final long serialVersionUID = 1L;
	public static String localhostname = null; 

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public Echo() {
		super();
	}
	
	public static synchronized boolean initLocalHost() {
		boolean ret = false;
		if (localhostname == null) {
			MDC.put("userid", "Echo");
			try {
				localhostname = java.net.InetAddress.getLocalHost().getHostName();
				ret = true;
			} catch (UnknownHostException e) {
				e.printStackTrace();
			}

			logger.info("Echo is initialized. Hostname: " + localhostname);
			MDC.remove("userid");
		}
		return ret;
	}

	public void init(ServletConfig config) throws ServletException {
		super.init(config);
		if (Echo.initLocalHost()) {
			MDC.put("userid", "Echo");
			(new EchoThread()).start();
			logger.info("Started Echo thread.");
			MDC.remove("userid");
		}
	}

	private class EchoThread extends Thread {
		EchoThread() {
		}

		public void run() {
			boolean ready = false;
			MDC.put("userid", "Echo");
			while (!ready) {
				Connection conn = null;
				try {
					Thread.sleep(15*60*1000); ////////////
					ServletContext context = getServletContext();
					String driverclass = context.getInitParameter("driverclass"); 
					String dburl=context.getInitParameter("dbUrl");
				    String dbusername=context.getInitParameter("dbUserName");
				    String dbpassword=context.getInitParameter("dbPassword");
				    Class.forName(driverclass);
					conn = DriverManager.getConnection(dburl, dbusername, dbpassword);
					
					logger.info("Sending echo request.");
					String tempTableName = Monitor.testNewPhenotype(conn);
					if (tempTableName == null) {
						String text = "An error was detected during the query execution. Please check the log file for further actions.\n\n";
						text += "Do not reply to this message.  This is an automated message generated by the system, which does not receive email messages.";

						InternetAddress addresses[] = new InternetAddress[3];
						addresses[0] = new InternetAddress("serban@isi.edu");
						addresses[1] = new InternetAddress("ambite@isi.edu");
						addresses[2] = new InternetAddress("sharma@isi.edu");
						
						//Utils.sendMessage(addresses, "PhenoExplorer Error", text); /////////////////
						logger.error(text);
					} else {
						Utils.dropTable(conn, tempTableName);
					}
				} catch (InterruptedException e) {
					e.printStackTrace();
				} catch (SQLException e) {
					ready = true;
					e.printStackTrace();
					logger.info("The monitor thread is terminated.");
				} catch (AddressException e) {
					e.printStackTrace();
				} catch (ClassNotFoundException e) {
					ready = true;
					e.printStackTrace();
					logger.info("The monitor thread is terminated.");
				} finally {
					if (conn != null) {
						try {
							conn.close();
						} catch (SQLException e) {
							e.printStackTrace();
						}
					}
				}
			}
			MDC.remove("userid");
		}
	}
}
